// backend/src/main/java/com/cheongchun/backend/controller/WebController.java
package com.cheongchun.backend.controller;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class WebController {

    /**
     * Î©îÏù∏ Ïõπ ÌéòÏù¥ÏßÄ - Google Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏Ïö©
     * URL: https://cheongchun-backend-40635111975.asia-northeast3.run.app/
     */
    @GetMapping("/")
    public ResponseEntity<String> getIndexPage() {
        String html = """
                <!DOCTYPE html>
                <html lang="ko">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Ï≤≠Ï∂ò - Î°úÍ∑∏Ïù∏</title>
                    <style>
                        body { 
                            font-family: 'Noto Sans KR', Arial, sans-serif; 
                            margin: 0; 
                            padding: 40px; 
                            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                            min-height: 100vh;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                        }
                        .container { 
                            background: white; 
                            padding: 40px; 
                            border-radius: 10px; 
                            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
                            text-align: center;
                            max-width: 400px;
                            width: 100%;
                        }
                        h1 { 
                            color: #333; 
                            margin-bottom: 30px;
                            font-size: 2em;
                        }
                        button { 
                            background: #4285f4; 
                            color: white; 
                            border: none; 
                            padding: 15px 30px; 
                            border-radius: 5px; 
                            cursor: pointer; 
                            font-size: 16px;
                            width: 100%;
                            margin-bottom: 15px;
                            transition: background 0.3s;
                        }
                        button:hover { 
                            background: #357ae8; 
                        }
                        .success { 
                            background: #4caf50; 
                            color: white; 
                            padding: 15px; 
                            border-radius: 5px; 
                            margin-top: 20px;
                            display: none;
                        }
                        .error { 
                            background: #f44336; 
                            color: white; 
                            padding: 15px; 
                            border-radius: 5px; 
                            margin-top: 20px;
                            display: none;
                        }
                        .user-info {
                            background: #f5f5f5;
                            padding: 15px;
                            border-radius: 5px;
                            margin-top: 20px;
                            display: none;
                        }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>üå∏ Ï≤≠Ï∂ò</h1>
                        <p>ÏÉàÎ°úÏö¥ ÎßåÎÇ®Ïùò ÏãúÏûë</p>
                        
                        <button onclick="loginWithGoogle()" id="loginBtn">
                            üöÄ GoogleÎ°ú Î°úÍ∑∏Ïù∏
                        </button>
                        
                        <button onclick="loginWithKakao()" style="background: #fee500; color: #000;">
                            üí¨ Ïπ¥Ïπ¥Ïò§Î°ú Î°úÍ∑∏Ïù∏
                        </button>
                        
                        <button onclick="loginWithNaver()" style="background: #03c75a;">
                            üì± ÎÑ§Ïù¥Î≤ÑÎ°ú Î°úÍ∑∏Ïù∏
                        </button>
                        
                        <div id="success" class="success"></div>
                        <div id="error" class="error"></div>
                        <div id="userInfo" class="user-info"></div>
                        
                        <button onclick="testAPI()" id="testBtn" style="background: #9c27b0; display: none;">
                            üîç ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå ÌÖåÏä§Ìä∏
                        </button>
                        
                        <button onclick="logout()" id="logoutBtn" style="background: #ff5722; display: none;">
                            üö™ Î°úÍ∑∏ÏïÑÏõÉ
                        </button>
                    </div>

                    <script>
                        const API_BASE = window.location.origin + '/api';
                        
                        function loginWithGoogle() {
                            window.location.href = API_BASE + '/oauth2/authorization/google';
                        }
                        
                        function loginWithKakao() {
                            window.location.href = API_BASE + '/oauth2/authorization/kakao';
                        }
                        
                        function loginWithNaver() {
                            window.location.href = API_BASE + '/oauth2/authorization/naver';
                        }
                        
                        function showSuccess(message) {
                            document.getElementById('success').textContent = message;
                            document.getElementById('success').style.display = 'block';
                            document.getElementById('error').style.display = 'none';
                        }
                        
                        function showError(message) {
                            document.getElementById('error').textContent = message;
                            document.getElementById('error').style.display = 'block';
                            document.getElementById('success').style.display = 'none';
                        }
                        
                        function showUserInfo(user) {
                            const userDiv = document.getElementById('userInfo');
                            userDiv.innerHTML = `
                                <h3>Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!</h3>
                                <p><strong>Ïù¥Î¶Ñ:</strong> ${user.name}</p>
                                <p><strong>Ïù¥Î©îÏùº:</strong> ${user.email}</p>
                                <p><strong>Í∞ÄÏûÖÏùº:</strong> ${new Date(user.createdAt).toLocaleDateString()}</p>
                            `;
                            userDiv.style.display = 'block';
                            
                            document.getElementById('testBtn').style.display = 'block';
                            document.getElementById('logoutBtn').style.display = 'block';
                            document.getElementById('loginBtn').style.display = 'none';
                        }
                        
                        async function testAPI() {
                            try {
                                const token = localStorage.getItem('accessToken');
                                const response = await fetch(API_BASE + '/auth/me', {
                                    headers: {
                                        'Authorization': `Bearer ${token}`
                                    }
                                });
                                
                                if (response.ok) {
                                    const data = await response.json();
                                    showSuccess('API ÌÖåÏä§Ìä∏ ÏÑ±Í≥µ! ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏôîÏäµÎãàÎã§.');
                                    console.log('ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥:', data);
                                } else {
                                    showError('API ÌÖåÏä§Ìä∏ Ïã§Ìå®: ' + response.status);
                                }
                            } catch (error) {
                                showError('API Ìò∏Ï∂ú Ïò§Î•ò: ' + error.message);
                            }
                        }
                        
                        async function logout() {
                            try {
                                const token = localStorage.getItem('accessToken');
                                await fetch(API_BASE + '/auth/logout', {
                                    method: 'POST',
                                    headers: {
                                        'Authorization': `Bearer ${token}`
                                    }
                                });
                            } catch (error) {
                                console.error('Î°úÍ∑∏ÏïÑÏõÉ API Ìò∏Ï∂ú Ïã§Ìå®:', error);
                            } finally {
                                localStorage.removeItem('accessToken');
                                localStorage.removeItem('refreshToken');
                                location.reload();
                            }
                        }
                        
                        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú URLÏóêÏÑú ÌÜ†ÌÅ∞Í≥º ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï∂îÏ∂ú
                        window.onload = function() {
                            const urlParams = new URLSearchParams(window.location.search);
                            const token = urlParams.get('token');
                            const error = urlParams.get('error');
                            const userId = urlParams.get('userId');
                            const email = urlParams.get('email');
                            const name = urlParams.get('name');
                            
                            if (error) {
                                showError('Î°úÍ∑∏Ïù∏ Ïã§Ìå®: ' + decodeURIComponent(error));
                            } else if (token) {
                                localStorage.setItem('accessToken', token);
                                
                                if (userId && email && name) {
                                    showUserInfo({
                                        id: userId,
                                        email: decodeURIComponent(email),
                                        name: decodeURIComponent(name),
                                        createdAt: new Date()
                                    });
                                } else {
                                    showSuccess('Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ! ÌÜ†ÌÅ∞Ïù¥ Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.');
                                    document.getElementById('testBtn').style.display = 'block';
                                    document.getElementById('logoutBtn').style.display = 'block';
                                }
                                
                                // URLÏùÑ ÍπîÎÅîÌïòÍ≤å Ï†ïÎ¶¨
                                window.history.replaceState({}, document.title, window.location.pathname);
                            } else {
                                // Í∏∞Ï°¥ ÌÜ†ÌÅ∞Ïù¥ ÏûàÎäîÏßÄ ÌôïÏù∏
                                const existingToken = localStorage.getItem('accessToken');
                                if (existingToken) {
                                    document.getElementById('testBtn').style.display = 'block';
                                    document.getElementById('logoutBtn').style.display = 'block';
                                    showSuccess('Ïù¥ÎØ∏ Î°úÍ∑∏Ïù∏Îêú ÏÉÅÌÉúÏûÖÎãàÎã§. API ÌÖåÏä§Ìä∏Î•º Ìï¥Î≥¥ÏÑ∏Ïöî!');
                                }
                            }
                        };
                    </script>
                </body>
                </html>
                """;

        return ResponseEntity.ok()
                .contentType(MediaType.TEXT_HTML)
                .body(html);
    }

    /**
     * OAuth ÏÑ±Í≥µ ÏΩúÎ∞± ÌéòÏù¥ÏßÄ
     */
    @GetMapping("/auth/success")
    public ResponseEntity<String> getSuccessPage(
            @RequestParam(required = false) String token,
            @RequestParam(required = false) String userId,
            @RequestParam(required = false) String email,
            @RequestParam(required = false) String name) {

        String redirectUrl = String.format("/?token=%s&userId=%s&email=%s&name=%s",
                token != null ? token : "",
                userId != null ? userId : "",
                email != null ? email : "",
                name != null ? name : "");

        String html = String.format("""
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Î°úÍ∑∏Ïù∏ Ï≤òÎ¶¨ Ï§ë...</title>
                    <script>
                        window.location.replace('%s');
                    </script>
                </head>
                <body>
                    <p>Î°úÍ∑∏Ïù∏ Ï≤òÎ¶¨ Ï§ëÏûÖÎãàÎã§...</p>
                </body>
                </html>
                """, redirectUrl);

        return ResponseEntity.ok()
                .contentType(MediaType.TEXT_HTML)
                .body(html);
    }
}